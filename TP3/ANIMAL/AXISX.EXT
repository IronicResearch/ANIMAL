
(* PUT_AXIS_ARRAY puts individual axis data into the master axis array. *)

PROCEDURE PUT_AXIS_ARRAY;

BEGIN
{
   AA [ 1] := X;
   AA [ 2] := Y;
   AA [ 3] := Z;
   AA [ 4] := F;
   AA [ 5] := R;
   AA [ 6] := U;
   AA [ 7] := L;
   AA [ 8] := P;
}
END;

(* GET AXIS ARRAY gets individual axis data out of the master axis array.*)

PROCEDURE GET_AXIS_ARRAY;

BEGIN
{
   X := AA [ 1];
   Y := AA [ 2];
   Z := AA [ 3];
   F := AA [ 4];
   R := AA [ 5];
   U := AA [ 6];
   L := AA [ 7];
   P := AA [ 8];
}
END;

(* ANY AXIS determines if any of the ANIMAL axes is specified to run. *)

PROCEDURE ANY_AXIS (VAR SPEC : BOOLEAN);

BEGIN

   SPEC := FALSE;

   FOR I := 1 TO MAX_AXES DO
       SPEC := SPEC OR AA [I].SPEC;

END;

(* ALL AXES determines if all of the ANIMAL axes are specified to run. *)

PROCEDURE ALL_AXES (VAR SPEC : BOOLEAN);

BEGIN

   SPEC := TRUE;

   FOR I := 1 TO MAX_AXES DO
       SPEC := SPEC AND AA [I].SPEC;

END;

(* CASE AXIS matches a 2-letter axis identfier with its corresponding axis.*)

PROCEDURE CASE_AXIS (VAR ID : CHAR2; VAR OK : BOOLEAN; VAR A : AXIS_TABLE);

BEGIN

   OK := FALSE;

   FOR I := 1 TO MAX_AXES DO
       IF ID = AA [I].ID
          THEN BEGIN
               A := AA [I];
               OK := TRUE;
               END;

END;

(* SWAP AXIS BACK swaps back the actual axis matched in CASE AXIS above.*)

PROCEDURE SWAP_AXIS_BACK (VAR ID : CHAR2; VAR A : AXIS_TABLE);

BEGIN

   FOR I := 1 TO MAX_AXES DO
       IF ID = AA [I].ID
          THEN AA [I] := A;

END;

